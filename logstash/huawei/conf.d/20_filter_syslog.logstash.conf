filter {
  if [type] == "syslog" {
    grok {
      id => "huawei_syslog_match"
      patterns_dir => "${HUAWEI_SYSLOG_PATTERNS_DIR:/etc/logstash/huawei/logstash/huawei/pattern}"
      match => { "message" => "%{HUAWEI_USG_LOGIN_SUCCESS_SSH}"}
      match => { "message" => "%{HUAWEI_USG_LOGIN_FAILED_SSH}"}
      match => { "message" => "%{HUAWEI_USG_LOGIN_HTTP}"}
      match => { "message" => "%{HUAWEI_USG_RECORD}"}
      match => { "message" => "%{HUAWEI_CE_LOGIN_FAILED_SSH}"}
      match => { "message" => "%{HUAWEI_CE_LOGIN_SUCCESS_SSH}"}
      match => { "message" => "%{HUAWEI_CE_RECORD}"}
      match => { "message" => "%{HUAWEI_CE_RECORD_Y_OR_N}"}
      match => { "message" => "%{HUAWEI_CORE_SW_RECORD}"}
      match => { "message" => "%{HUAWEI_CORE_SW_SUCCESS_SSH}"}
      match => { "message" => "%{HUAWEI_CORE_SW_FAILED_SSH}"}
      match => { "message" => "%{HUAWEI_CORE_SW_SSH_LOGOUT}"}
      match => { "message" => "%{HUAWEI_CORE_SW_FAILED_HTTP}"}
      match => { "message" => "%{HUAWEI_CORE_SW_SUCCESS_HTTP}"}
      match => { "message" => "%{HUAWEI_RT_FAILED_SSH}"}
      match => { "message" => "%{HUAWEI_RT_RECORD}"}
      match => { "message" => "%{HUAWEI_RT_LOGIN_USER}"}
      add_field => [ "received_at" , "%{@timestamp}" ] 
    }

    translate {
      id => "huawei_syslog_translate"
      field => "SyslogProgram"
      destination => "program"
      override => "false"
      dictionary_path => "${HUAWEI_SYSLOG_TRANSLATE_DICTIONARY_LOGIN_ACCESS:/etc/logstash/huawei/logstash/huawei/dictionaries/access.yml}"
    }

    syslog_pri { 
      id => "huawei_syslog_remove_field"
      remove_field => "message"
    }

    date {
      id => "huawei_syslog_format_data"      
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }

  if "_grokparsefailure" in [tags] {
    drop { }
  }
}
